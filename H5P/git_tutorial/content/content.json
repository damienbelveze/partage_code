{"showCoverPage":true,"bookCover":{"coverDescription":"<p>Comment utiliser Git pour : </p>\n\n<p>- contrôler les versions de son travail</p>\n\n<p>- sauvegarder chaque état de son travail sur un serveur distant (ici nous proposons Github)</p>\n","coverMedium":{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-rjY5N5Ph.png","mime":"image/png","copyright":{"license":"U"},"width":910,"height":380},"alt":"logo Git","title":"logo Git"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"6aabd37f-7d4a-4098-a350-08146196075c"}},"chapters":[{"params":{"content":[{"content":{"params":{"panels":[{"content":{"params":{"text":"<p>Git est un logiciel libre. On peut le télécharger depuis <a href=\"https://git-scm.com/downloads\" target=\"_blank\">le site officiel de Git</a>.</p>\n\n<p>Git dispose d'une interface graphique rudimentaire, mais dans ce guide nous allons plutôt utiliser Git en lignes de commande. </p>\n"},"library":"H5P.AdvancedText 1.1","subContentId":"6249b6eb-6837-4cb7-8f9f-52b5efd05577","metadata":{"contentType":"Text","license":"U","title":"Sans titre Text","authors":[],"changes":[]}},"title":"Télécharger Git"},{"content":{"params":{"text":"<p>Tout ordinateur dispose d'un terminal sur lequel on peut passer directement des commandes sans passer par une interface graphique. Ces terminaux diffèrent d'un système d'exploitation à un autre mais varient selon les utilisatrices qui soit se contentent de ceux qui sont prévus par défaut dans leur système d'exploitation soit en chargent d'autres qu'elles jugent plus complets.</p>\n\n<p>Les commandes suivantes peuvent soit être passées sur ces terminaux (si Git est installé) soit être passées sur le terminal propre à Git. C'est ce dernier que nous allons utiliser (dans la version prévue par Windows). Pour les système d'exploitation Linux ou MacOs les commandes seront les mêmes. Les combinaisons de touches à utiliser peuvent varier en revanche. </p>\n\n<p>Sur Windows, pour ouvrir le terminal de Git, aller sur le bureau ou dans n'importe quel dossier et faire un clic droit. Lorsque Git est installé, deux options supplémentaires apparaissent : </p>\n\n<p>Git GUI (Git avec interface graphique)</p>\n\n<p>Git Bash (terminal de commandes) ; c'est ce dernier que nous allons utiliser, car il est plus usité que l'interface rudimentaire de Git.</p>\n"},"library":"H5P.AdvancedText 1.1","subContentId":"19877d61-2087-40c8-a670-140b0ef0d10a","metadata":{"contentType":"Text","license":"U","title":"Sans titre Text","authors":[],"changes":[]}},"title":"Ouvrir le terminal de son ordinateur"},{"content":{"params":{"text":"<p>La chose est aisée. Il suffit d'aller sur Github (https://github.com/) et de se créer un compte en cliquant en haut à droite sur <strong>Sign Up. </strong>Après quoi utiliser cet identifiant et ce mot de passe pour vous connecter à votre tableau de bord sur Github ( <strong>Sign in </strong>). </p>\n\n<p>Aujourd'hui, Github pousse vers une double authentification ; ce n'est pas immédiat et il vous suffit de suivre les instructions fournies. Nous n'allons pas développer cet aspect dans ce tuto. </p>\n\n<p>Les captures d'écran suivantes mentionnent aussi l'existence d'une clé à activer pour sécuriser les envois d'information entre votre ordinateur et Github. C'est une bonne pratique que d'utiliser ces clés, mais ce n'est pas non plus l'objet de ce tuto qui se contente de parcourir les commandes de Git les plus utilisées.</p>\n"},"library":"H5P.AdvancedText 1.1","subContentId":"32462b90-2c15-4905-abca-4542bdf45443","metadata":{"contentType":"Text","license":"U","title":"Sans titre Text","authors":[],"changes":[]}},"title":"Se créer un compte sur Github"}],"hTag":"h2"},"library":"H5P.Accordion 1.0","metadata":{"contentType":"Accordion","license":"U","title":"Télécharger Git et se créer un compte sur Github","authors":[],"changes":[],"extraTitle":"Télécharger Git et se créer un compte sur Github"},"subContentId":"a994f4f5-8f12-4abd-a30b-934b6313d8ae"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"572f7856-8df6-4e8e-9f7e-d08e81efd9ca","metadata":{"contentType":"Column","license":"U","title":"Télécharger Git et se créer un compte sur Github","authors":[],"changes":[],"extraTitle":"Télécharger Git et se créer un compte sur Github"}},{"params":{"content":[{"content":{"params":{"taskDescription":"Versionner sa thèse avec Git","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-o2Dvc3mj.png","mime":"image/png","copyright":{"license":"U"},"width":1920,"height":1080},"alt":"Menu Git sur l&#039;explorateur Windows","title":"Menu Git sur l&#039;explorateur Windows"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"d36ad96c-88bb-43e2-891d-01b6c5cb97fe"}],"helpTextLabel":"Comment accéder à Git depuis le répertoire où on se trouve","helpText":"<p>Pour ouvrir le terminal de Git, faire un clic droit dans son répertoire de travail et sélectionner <em>Git bash</em></p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Sans titre Standard page","authors":[],"changes":[],"extraTitle":"Sans titre Standard page"},"subContentId":"cef7a289-94b1-461e-962e-1255238734b5"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Télécharger Git","authors":[],"changes":[],"extraTitle":"Télécharger Git"},"subContentId":"027ea6c2-6e05-40d8-9faa-8959bf0d6048"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"5e144556-d09c-4f39-be5f-0539db178076","metadata":{"contentType":"Column","license":"U","title":"Ouvrir le terminal de commandes de Git","authors":[],"changes":[],"extraTitle":"Ouvrir le terminal de commandes de Git"}},{"params":{"content":[{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-27vPupi6.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":856,"height":569},"alt":"initialiser un répertoire Git","title":"initialiser un répertoire Git"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"c2cf5459-29ee-4ab7-8188-fd30333787ac"}],"helpTextLabel":"A quoi rime cette commande ?","helpText":"<p>Initialiser un répertoire consiste à créer un fichier qui va conserver toutes les modifications qui vont être apportées aux documents présents dans ce répertoire de travail. </p>\n\n<p>Dans Windows, ce fichier n'est visible dans le répertoire que si l'utilisateur affiche les éléments masqués dans le menu de son explorateur de fichiers (comme tous les fichiers marqués par un \".\" (.git). Pour Linux, ces fichiers apparaissent avec la combinaison de touches Ctrl+H</p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Initier un répertoire Git","authors":[],"changes":[],"extraTitle":"Initier un répertoire Git"},"subContentId":"24232249-fd16-4e2b-a864-38077def21af"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Initier un répertoire Git","authors":[],"changes":[],"extraTitle":"Initier un répertoire Git"},"subContentId":"412be0cb-191f-42e4-b31b-c8da12a625ab"},"useSeparator":"auto"},{"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"aab11b97-cead-45ed-be37-c5fd033719f0","metadata":{"contentType":"Column","license":"U","title":"Initier un répertoire Git","authors":[],"changes":[],"extraTitle":"Initier un répertoire Git"}},{"params":{"content":[{"useSeparator":"auto","content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-4LCvvi4E.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":988,"height":553},"alt":"Les commandes de bases : add, commit","title":"Les commandes de bases : add, commit"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"d0b818e6-d079-4a0e-b5a7-1a79688b2b3f"}],"helpTextLabel":"A quoi riment ces commandes ?","helpText":"<h2>Ajouter des fichiers au registre</h2>\n\n<p>Une fois qu'on a créé le document maître de votre thèse, vous devez l'ajouter au registre des fichiers et modifications de fichiers qui sont enregistrés dans le dossier caché .git</p>\n\n<p>Si notre document maître à pour nom de fichier</p>\n\n<p>La commande qui permet de réaliser cette action est add</p>\n\n<pre>git add ma_these.md</pre>\n\n<p>Ajoute le fichier ma_these.fr au registre. </p>\n\n<p>Si le nom du fichier est long, plutôt que de l'écrire en entier, écrire les premières lettres et appuyer sur la touche TAB, le reste du fichier va s'incrémenter.  </p>\n\n<pre>git add * </pre>\n\n<p>Cette commande ajoute tous les fichiers nouvellement créés avec leurs récentes modifications</p>\n\n<p>En cas d'erreur (si on ne souhaite pas finalement ajouter ce fichier au registre des modifications, on peut l'enlever avec la commande rm (remove) :</p>\n\n<pre>git remove fichier</pre>\n\n<p>Pour voir quels sont les fichiers qui demandent à être ajoutés dans le répertoire, utiliser la commande. </p>\n\n<pre>git status</pre>\n\n<p>Les fichiers proposés à l'ajout sont en rouge. Si on ne souhaite pas ajouter certains fichiers au registre, on peut ajouter leurs noms dans un fichier .gitignore . Toutefois le projet d'éditer une thèse ne justifie pas d'utiliser un tel fichier, par conséquent, nous ne faisons que le mentionner. </p>\n\n<h2>Committer des fichiers</h2>\n\n<p>La notion de \"commit\", par rapport à la commande \"add\" n'est pas toujours aisée à comprendre. Un commit est un état global du répertoire comportant tous les récents ajours de fichiers et de modifications de ces fichiers. Chaque commit a un identifiant unique, ce qui permet de tracker les principaux états d'un même travail. </p>\n\n<p>Quand on a ajouté ou \"stagé\" plusieurs modifs avec la commande add, il faut les committer avec la commande \"commit\". Chaque commit doit être associé à un message qui n'est pas normé mais aide l'utilisateur à s'y retrouver dans les différents commits. </p>\n\n<pre>git commit -m \"ajout d'un paragraphe au troisième chapitre\"</pre>\n\n<p>Commit est la dernière étape avant l'envoi des données vers l'entrepôt (en l'occurrence dans notre exemple sur Github)</p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Les commandes de bases : add, commit","authors":[],"changes":[],"extraTitle":"Les commandes de bases : add, commit"},"subContentId":"929265d7-0850-4568-8bd6-af2dc6ce5b48"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Les commandes de bases : add, commit","authors":[],"changes":[],"extraTitle":"Les commandes de bases : add, commit"},"subContentId":"a62853ad-272e-4aeb-9447-2902b5cc0fdb"}}]},"library":"H5P.Column 1.15","subContentId":"63dc4976-76f7-448e-b420-479ae1efab1b","metadata":{"contentType":"Column","license":"U","title":"Committer et envoyer les mises à jour vers Github","authors":[],"changes":[],"extraTitle":"Committer et envoyer les mises à jour vers Github"}},{"params":{"content":[{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-9n5dIGDa.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":1865,"height":928},"alt":"créer un dépôt sur Github","title":"Créer un dépôt sur Github"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"4a14a06a-9525-4427-a6e8-1066afa56107"}],"helpTextLabel":"Besoin d&#039;aide pour créer un dépôt sur Github ?","helpText":"<p>Retourner sur son tableau de bord sur Github (https://github.com/ puis se connecter à son compte)</p>\n\n<p>Entrer un nom pour le dépôt. </p>\n\n<p>Le dépôt aura l'URL de ce type : https://github.com/user/fichier </p>\n\n<p>Pour une thèse il est préférable de rendre le dépôt privé (private). Les autres utilisateurs de pourront pas voir son contenu. Lorsque la thèse sera publiée, on pourra toujours rendre le dépôt public, ce qui permettra au public d'avoir accès à un plus grand nombre d'informations (données, code...) que celles qui sont contenues dans le seul PDF soumis au jury. </p>\n\n<p>Inutile à ce stade d'écrire un fichier READ.me ou gitignore. La question de la licence ne se pose pas pour l'instant, puisque le dépôt n'est pas public. </p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Créer un nouveau dépôt sur Github","authors":[],"changes":[],"extraTitle":"Créer un nouveau dépôt sur Github"},"subContentId":"76c73213-1bc9-479c-ba86-9a2e09fa7862"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Créer un nouveau dépôt sur Github","authors":[],"changes":[],"extraTitle":"Créer un nouveau dépôt sur Github"},"subContentId":"f81fa5fe-84fb-4b25-a15c-3834733077da"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"161797e4-3b5b-4872-95b6-6e34caaf6ac0","metadata":{"contentType":"Column","license":"U","title":"Créer un nouveau dépôt sur Github","authors":[],"changes":[],"extraTitle":"Créer un nouveau dépôt sur Github"}},{"params":{"content":[{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-oG3tVnN6.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":1077,"height":617},"alt":"La commande git remote","title":"Utiliser la commande git remote"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"629c4748-f1f9-472f-aa11-60dbdde64752"}],"helpTextLabel":"A quoi rime cette commande","helpText":"<p>Sur la page github du nouveau dépôt, copier / coller la commande suggérée sous \"or push an existing repository from the command line\"</p>\n\n<p>retour au répertoire en local. Ouvrir le terminal de commande git bash dans le répertoire de travail. Coller cette commande dans le terminal. </p>\n\n<p>Attention, on ne copie-colle pas du texte dans un terminal comme on le fait dans un document word ou un navigateur !</p>\n\n<p>Pour coller du texte dans le terminal de Git, sur Windows, utiliser la combinaison de touches shift + inser (si la touche Inser est dans le clavier numérique, veiller à ce que celui-ci soit désactivé).</p>\n\n<pre>git remote add origin git@github.com:user/ma_these.git</pre>\n\n<p>Un entrepôt Git peut contenir plusieurs branches. </p>\n\n<p>Ces branches sont autant de versions possibles de votre travail à un moment T. </p>\n\n<p>En général, on travaille sur une branche principale (Main) et on mène des modifications sur d'autres branches. On peut cependant n'utiliser que la branche principale. </p>\n\n<p>Il convient maintenant de définir la branche dans laquelle les modifications vont être faites (en l'occurrence la branche Main). Entrer les autres commandes suggérées : </p>\n\n<pre>git branch -M main</pre>\n\n<p>La dernière commande va envoyer le dernier état des fichiers (commit) vers la branche Main : </p>\n\n<pre>git push -u origin main</pre>\n\n<p>Par la suite, tant qu'on ne change pas de branche, il suffira d'envoyer les commits avec la commande </p>\n\n<pre>git push -u origin\n</pre>\n\n<p>Dans la copie d'écran, Git propose à l'utilisateur d'utilise une clé SSH. C'est une mesure de sécurité qui n'est pas obligatoire et qui fait référence à une clé privée hébergée sur l'ordinateur de l'utilisateur. Cette clé privée est activée au moyen d'une phrase de passe. Ajouter une clé publique SSH à son compte Github (et la clé privée correspondante sur son ordinateur peut être intéressant à faire dans un second temps, mais on n'en parlera pas ici)</p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Relier ce dépôt au répertoire en local","authors":[],"changes":[],"extraTitle":"Relier ce dépôt au répertoire en local"},"subContentId":"985a3995-19ff-4cca-b43e-ffb60b4d17ed"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Relier ce dépôt au répertoire en local","authors":[],"changes":[],"extraTitle":"Relier ce dépôt au répertoire en local"},"subContentId":"210730af-a5f4-4f8e-8d33-90e693f13186"},"useSeparator":"auto"},{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-FsEBXi75.jpg","mime":"image/png","copyright":{"license":"U"},"width":860,"height":332,"originalImage":{"path":"images/image-GN48Tu0b.jpg","mime":"image/jpeg","height":346,"width":1360}},"alt":"Le fichier envoyé vers github s&#039;affiche dans le répertoire","title":"Le fichier envoyé vers github s&#039;affiche dans le répertoire"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"42b1c383-4aea-4f91-8ff0-a174b00779fc"}],"helpTextLabel":"Mon manuscrit est désormais sur mon dépôt Github","helpText":"<p>Lorsque vous allez sur votre dépôt GIthub, vous pouvez vous rendre compte que les commandes précédentes ont permis d'envoyer le fichier ma_these.md dans Github avec un identifiant de commit associé  (416e1ad)</p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Résultat des commandes précédentes","authors":[],"changes":[],"extraTitle":"Résultat des commandes précédentes"},"subContentId":"a120d7ee-976d-42d3-8bdc-b6f4bacb339d"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Résultat des commandes précédentes","authors":[],"changes":[],"extraTitle":"Résultat des commandes précédentes"},"subContentId":"bdf51b3f-dee0-4e16-bef8-3cabf0779924"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"86fd1d36-a639-42b0-ae01-57d9e694399c","metadata":{"contentType":"Column","license":"U","title":"Relier ce dépôt au répertoire en local","authors":[],"changes":[],"extraTitle":"Relier ce dépôt au répertoire en local"}},{"params":{"content":[{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-IU9EPTit.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":898,"height":599},"alt":"Modifier le fichier et envoyer les modifications vers le dépôt"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"ebf79308-1555-4762-95ef-3f1fbb0661dd"}],"helpTextLabel":"A quoi riment ces commandes ?","helpText":"<p>Supposons à présent que l'on ajoute des modifications au fichier ma_these.md (pour l'instant vide), par exemple un plan. </p>\n\n<p>On refait les mêmes commandes que précédemment : </p>\n\n<p>git status </p>\n\n<p>c'est facultatif : il s'agit simplement de visualiser les fichiers qui ont été retouchés et demandés à être ajoutés (\"stagés\")</p>\n\n<p>git add *</p>\n\n<p>Pour ajouter toutes les modifs au registre Git de tous les fichiers modifiés (un seul l'a été dans notre exemple)</p>\n\n<p>git commit -m \"ajout d'un plan\"</p>\n\n<p>pour committer la modification en l'assortissant d'un message explicatif (pour rappel ce dernier est obligatoire mais on écrit ce qu'on veut). </p>\n\n<p>git push -u origin</p>\n\n<p>pour envoyer vers la branche de référence (la branche Main)</p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Modifier le fichier et envoyer les modifications vers le dépôt","authors":[],"changes":[],"extraTitle":"Modifier le fichier et envoyer les modifications vers le dépôt"},"subContentId":"d7621afe-9ac9-4342-9490-e65cb2c87ea1"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Modifier le fichier et envoyer les modifications vers le dépôt","authors":[],"changes":[],"extraTitle":"Modifier le fichier et envoyer les modifications vers le dépôt"},"subContentId":"ef66bb3d-f19f-4a22-959a-7d5432f226d3"},"useSeparator":"auto"},{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-9ueHnKsY.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":1318,"height":740},"alt":"résultat du second commit","title":"résultat du second commit"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"2247fe89-6c6c-4a6a-b126-97acb34e671d"}],"helpTextLabel":"En savoir plus","helpText":"<p>Le second commit est identifié par un autre identifiant numérique propre (c76a723). Lorsqu'on clique sur cet identifiant, on arrive sur le message du commit \"ajout d'un plan\". </p>\n\n<p>En vert, on observe les caractères qui ont été ajoutés (en l'occurrence le plan). En rouge ceux qui ont supprimés entre le premier et le second commit. Dans notre exemple, le fichier commité pour la première fois étant vide, il n'y a pas eu de suppression de caractères. </p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Visualiser les modifications sur le dépôt","authors":[],"changes":[],"extraTitle":"Visualiser les modifications sur le dépôt"},"subContentId":"6bf6d43a-9cc0-4556-9995-e81498226730"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Visualiser les modifications sur le dépôt","authors":[],"changes":[],"extraTitle":"Visualiser les modifications sur le dépôt"},"subContentId":"b01e1228-1687-4619-893f-b4786fcc49bd"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"c755428a-a1b7-423f-b8e8-87a626a26d6c","metadata":{"contentType":"Column","license":"U","title":"Modifier le fichier et envoyer les modifications vers le dépôt","authors":[],"changes":[],"extraTitle":"Modifier le fichier et envoyer les modifications vers le dépôt"}},{"params":{"content":[{"content":{"params":{"taskDescription":"Outil de documentation","pagesList":[{"params":{"elementList":[{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-GgpcAEm5.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":988,"height":752},"alt":"Comment revenir à une version du travail antérieure aux dernières modifications."},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"eeebc99f-8fac-498d-a956-7206fbeb32b5"}],"helpTextLabel":"A quoi riment ces commandes ?","helpText":"<p>Nous allons ainsi procéder à plusieurs modifications du texte contenu dans ma_these.md. </p>\n\n<p>Les modifications vont être \"stagées\" (ajoutées au registre de Git avec la fonction \"add\" puis ces modifications vont faire l'objet de commits successifs. </p>\n\n<p>Chaque commit est reconnaissable par un identifiant propre (une empreinte réalisée au moyen d'une fonction de hâchage, qui identifie à coup sûr une modification. Ces hashs se présentent sous la forme de chaînes de caractères alphanumériques dont les 7 premiers caractères apparaissent dans le répertoire github en tête de chaque Commit. </p>\n\n<p>Pour faire apparaître l'ensemble des commits liés aux messages que l'on a laissés au moment de committer : </p>\n\n<pre>git log --pretty=oneline</pre>\n\n<p>Le résultat s'affiche aussitôt : </p>\n\n<pre>9a48eb2c032aa73caac41bbabda920737b0d9554 (HEAD -&gt; main, origin/main) ajout texte première partie\nbe0ec0744765e2b0e6c95520a3558cb381ab079c nouvelle introduction\n7a5c053b286e9b32589f758d5f771bc17ba3584d Revert \"ajout d'un texte en introduction\"\nef5f9c515b84645b92dc17cefcd27dab9326df8b ajout d'une phrase en conclusion\nb4fc795bc9817ebe4dd5eba7304167a90dafabc1 ajout d'un texte en introduction\nc76a723affbe957a756704c9d545015acf0f70d8 ajout d'un plan\n416e1ad64fc0c2f06129a1c5d2d7434697dd0ec3 ajout du fichier maître\n</pre>\n\n<p>Si l'on souhaite revenir à une version antérieure du projet, on va sélectionner le commit à partir desquelles les autres modifications doivent être supprimées. Mettons que nous souhaitions revenir à la première version de notre introduction ; le commit correspondant est b4fc795 (hash=  b4fc795bc9817ebe4dd5eba7304167a90dafabc1)</p>\n\n<p>Pour copier le hash, utiliser Contrôle C</p>\n\n<p>Dans notre éditeur cela crée une fausse commande ^C; mais c'est sans conséquences. Utiliser la ligne suivante pour passer la commande revert.</p>\n\n<p>Pour revenir à cette version localement, je vais utiliser la commande Revert :</p>\n\n<pre>git revert b4fc795</pre>\n\n<p>ou</p>\n\n<pre>git revert b4fc795bc9817ebe4dd5eba7304167a90dafabc1</pre>\n\n<p>L'opération va susciter l'ouverture d'un éditeur de texte où l'opération est décrite. Il suffit de fermer cet éditeur pour que la réversion ait lieu. </p>\n\n<p>Après quoi, si je veux envoyer cette modification vers le dépôt sur Github, il me reste à ajouter le fichier qui a été modifié (git add) et à committer (git commit) puis à pousser ce commit vers le dépôt (git push), bref à utiliser la triade de commandes qu'on commence à bien commettre...</p>\n\n<p> </p>\n"},"library":"H5P.StandardPage 1.5","metadata":{"contentType":"Standard page","license":"U","title":"Revenir à une version antérieure du travail","authors":[],"changes":[],"extraTitle":"Revenir à une version antérieure du travail"},"subContentId":"16d1af1c-ad5c-4701-a174-0d7cae276d03"}],"i10n":{"previousLabel":"Précédent","nextLabel":"Suivant","closeLabel":"Fermer"}},"library":"H5P.DocumentationTool 1.8","metadata":{"contentType":"Documentation Tool","license":"U","title":"Revenir à une version antérieure du travail","authors":[],"changes":[],"extraTitle":"Revenir à une version antérieure du travail"},"subContentId":"45076785-4e48-457a-a62b-cf01aa9051d7"},"useSeparator":"auto"},{"content":{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-Ogp2tTDc.jpg","mime":"image/jpeg","copyright":{"license":"U"},"width":1071,"height":744},"alt":"Résultat du revert : les ajouts ultérieurs au commit be0ec07 ont été supprimés (zones rouges)","title":"Résultat du revert : les ajouts ultérieurs au commit be0ec07 ont été supprimés (zones rouges)"},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"111d69e8-7cc2-457c-8f85-7d1b87ac6bf0"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"a5fb366d-fdcc-4c60-b165-bf9d36a3a98f","metadata":{"contentType":"Column","license":"U","title":"Revenir à une version antérieure du travail","authors":[],"changes":[],"extraTitle":"Revenir à une version antérieure du travail"}},{"params":{"content":[{"content":{"params":{"decorative":false,"contentName":"Image","file":{"path":"images/image-AhHi8OJT.png","mime":"image/png","copyright":{"license":"U"},"width":548,"height":494}},"library":"H5P.Image 1.1","metadata":{"contentType":"Image","license":"U","title":"Sans titre Image","authors":[],"changes":[]},"subContentId":"1b6c6f2c-da63-43d4-b3d7-19cdd74d5fcd"},"useSeparator":"auto"},{"content":{"params":{"text":"<p>Bon à savoir : Git permet aussi de travailler à plusieurs. Les collaborateurs peuvent comparer leur travail respectif et on peut fusionner les différentes parties d'un travail qui en valent la peine. Nous vous invitons à prendre en main les fonctionnalités de Git qui vous permettront de gérer individuellement le versionnage de votre thèse : ça ne sera déjà pas si mal pour une première étape.</p>\n\n<p><strong>Bon démarrage avec Git ! </strong></p>\n"},"library":"H5P.AdvancedText 1.1","metadata":{"contentType":"Text","license":"U","title":"Sans titre Text","authors":[],"changes":[]},"subContentId":"b2443e8f-5c33-4623-8c98-45bc99b22c6e"},"useSeparator":"auto"}]},"library":"H5P.Column 1.15","subContentId":"883fe7f5-cdcd-4c27-9203-09bf5c1377c6","metadata":{"contentType":"Column","license":"U","title":"Git permet aussi de travailler à plusieurs","authors":[],"changes":[],"extraTitle":"Git permet aussi de travailler à plusieurs"}}],"behaviour":{"baseColor":"#1768c4","defaultTableOfContents":true,"progressIndicators":true,"progressAuto":true,"displaySummary":true},"read":"Lire","displayTOC":"Afficher la 'Table des matières'","hideTOC":"Cacher la 'Table des matières'","nextPage":"Page suivante","previousPage":"Page précédente","chapterCompleted":"Page terminée!","partCompleted":"@pages sur @total terminé","incompleteChapter":"Page non terminée","navigateToTop":"Revenir en haut","markAsFinished":"J'ai terminé cette page","fullscreen":"Plein écran","exitFullscreen":"Réduire","bookProgressSubtext":"@count sur @total pages","interactionsProgressSubtext":"@count sur @total interactions","submitReport":"Soumettre le rapport","restartLabel":"Relancer","summaryHeader":"Sommaire","allInteractions":"Toutes les interactions","unansweredInteractions":"Interactions sans réponse","scoreText":"@score / @maxscore","leftOutOfTotalCompleted":"@left sur @max interactions réalisées","noInteractions":"Aucune interaction","score":"Score","summaryAndSubmit":"Résumé et transmission","noChapterInteractionBoldText":"Vous n'avez interagi avec aucune page.","noChapterInteractionText":"Vous devez interagir avec au moins une page avant de pouvoir voir le résumé.","yourAnswersAreSubmittedForReview":"Vos réponses sont soumises à examen !","bookProgress":"Avancement dans la lecture","interactionsProgress":"Avancement des interactions","totalScoreLabel":"Score total","a11y":{"progress":"Page @page sur @total.","menu":"Étendre/Réduire le menu"}}